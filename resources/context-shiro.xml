<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	<aop:config proxy-target-class="true" />
	<import resource="shiro-cache-redis.xml" />
	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher" class="com.flyme.core.shiro.credentials.RetryLimitHashedCredentialsMatcher">
		<constructor-arg ref="cacheManager" />
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="2" />
		<property name="storedCredentialsHexEncoded" value="true" />
	</bean>
	<!-- Realm实现 -->
	<bean id="adminRealm" class="com.flyme.core.shiro.realm.AdminRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher" />
		<property name="cachingEnabled" value="false" />
		<!--<property name="authenticationCachingEnabled" value="true"/> -->
		<!--<property name="authorizationCachingEnabled" value="true"/> -->
		<!--<property name="authorizationCacheName" value="authorizationCache"/> -->
	</bean>
	<bean id="defineModularRealmAuthenticator" class="com.flyme.core.shiro.realm.DefautModularRealm">
		<property name="definedRealms">
			<map>
				<entry key="adminRealm" value-ref="adminRealm" />
			</map>
		</property>
		<property name="authenticationStrategy">
			<bean class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy" />
		</property>
	</bean>
	<bean id="kickoutSessionControlFilter" class="com.flyme.core.shiro.web.filter.KickoutSessionControlFilter">
		<property name="cacheManager" ref="cacheManager" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="kickoutAfter" value="true" />
		<property name="maxSession" value="10" />
		<property name="kickoutUrl" value="/admin/login.do?kickout=1" />
	</bean>
	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" />
	</bean>
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" /><!-- 30天 -->
	</bean>
	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
		<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>

	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler2">
		<!-- 会话验证器调度时间 -->
		<property name="sessionValidationInterval" value="86400000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<!-- 会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 设置全局会话超时时间，默认30分钟(1800000) -->
		<property name="globalSessionTimeout" value="86400000" />
		<!-- 是否在会话过期后会调用SessionDAO的delete方法删除会话 默认true -->
		<property name="deleteInvalidSessions" value="true" />
		<!-- 是否定时检查失效的session -->
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<!-- 定时检查失效的session -->
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<!-- session存储的实现 -->
		<property name="sessionDAO" ref="sessionDAO" />
		<!-- 是否启用sessionIdCookie的实现 -->
		<property name="sessionIdCookieEnabled" value="true" />
		<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="authenticator" ref="defineModularRealmAuthenticator" />
		<property name="realms">
			<list>
				<bean id="adminRealm" class="com.flyme.core.shiro.realm.AdminRealm" />
			</list>
		</property>
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="cacheManager" />
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="formAuthenticationFilter" class="com.flyme.core.shiro.web.filter.RememberAuthenticationFilter">
		<property name="usernameParam" value="accountName" />
		<property name="passwordParam" value="password" />
		<property name="rememberMeParam" value="rememberMe" />
		<property name="loginUrl" value="/web/index.hm" />
	</bean>
	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/admin/login.do" />
		<property name="successUrl" value="/admin/index.do" />
		<property name="unauthorizedUrl" value="/admin/login.do" />
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="formAuthenticationFilter" />
				<entry key="sysUser" value-ref="sysUserFilter" />
				<entry key="kickout" value-ref="kickoutSessionControlFilter" />
			</util:map>
		</property>
		<!-- 自定义权限配置 -->
		<property name="filterChainDefinitionMap" ref="chainDefinitionSectionMetaSource" />
	</bean>
	<bean id="sysUserFilter" class="com.flyme.core.shiro.web.filter.SysUserFilter" />
	<bean id="checkPermissionFilter" class="com.flyme.core.shiro.web.filter.CheckPermissionFilter" />
	<!--自定义filterChainDefinitionMap -->
	<bean id="chainDefinitionSectionMetaSource" class="com.flyme.core.shiro.metasource.ChainDefinitionSectionMetaSource">
		<property name="filterChainDefinitions">
			<value>
				/**/*.hm=anon
				/**/*.ico=anon
				/res/**=anon
				/points/**=anon
				/admin/websocket/**=anon
				/admin/sockjs/**=anon
				/druid/**=anon
				/file/**=anon
				/rmapp/**=anon
				/upload/**=anon
				/file/**=anon
				/**/*.txt=anon
				/common/**=anon
				/plug-in/**=anon
				/flyme/**=anon
				/importlog/**=anon
				/admin/login.do=anon
				/**/*.rm=anon
				/**/*.wx=anon
				/mine/**=authc
				/**/*.html=anon
				/admin/api/**=anon
				/querypwd/**=anon
				/admin/about.do=anon
				/admin/order/order_backvalid_print.do=anon
				/admin/order/order_frontvaild_print.do=anon
				/admin/order/order_caroutprint_turn.do=anon
				/admin/order/order_settle_print.do=anon
				/admin/order/order_peccancy_print.do=anon
				/admin/captcha.do=anon
				/admin/checkuser.do=anon
				/admin/logout.do=authc
				/admin/desktop.do=authc
				/admin/count.do=authc
				/admin/resource.do=authc
				/admin/shortcut.do=authc
				/druid/**=authc,roles[ROLE_SYS_SUPER]
			</value>
		</property>
	</bean>
	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- 开启shiro的注解 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>